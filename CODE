
%Clear workspace and load data - if you want to use MATLAB
clear all; close all; clc;tic;
x1=[6,12];x2=[19,7];x3=[15,4];x4=[11,0];x5=[18,12];x6=[9,20];x7=[19,22];
x8=[18,17];x9=[5,11];x10=[4,18];x11=[7,15];x12=[21,18];x13=[1,19];x14=[1,4];
x15=[0,9];x16=[5,11];
data = vertcat(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16);
idata = zeros(16,2);
clearvars -except data idata
%Invert the original data
for k=0:length(idata)-1
    idata(16-k,:) = data(k+1,:);
end
%%Run the Basic Sequential Algorithmic Scheme - BSAS
theta=12;
BSAS(data,theta);  %input 2D vectors/matrix/array of data and Theta
BSAS2(idata,theta); %input  2D vectors/matrix/array of data and Theta
load('cluster.mat');
cluster1=C; clear C;
load('icluster.mat');
cluster2=C; clear C;
cnta=0;cntb=0;cntc=0;cntd=0;
for i=1:length(data)
    for j=1:length(cluster1)
        flag1=ismember(data(i,:),cluster1{j},'rows');
        flag2=ismember(data(i,:),cluster2{j},'rows');
    end
    if (flag1==1)&&(flag2==1) %%same clusters
        cnta=cnta+1;
    end
    if (flag1==0)&&(flag2==0) %%different clusters
        cntb=cntb+1;
    end
    if (flag1==1)&&(flag2==0) %%different clusters
        cntc=cntc+1;
    end
    if (flag1==0)&&(flag2==1) %%different clusters
        cntd=cntd+1;
    end
end
rand = (cnta+cntb)/(cnta+cntb+cntc+cntd);
display('The first cluster in cyan in first set of clusters was altered the most because it has a sparse cluster compared to the others clusters which has a more globular shape.');
pause(2);
clearvars -except rand
%% Run Hierachial clustering on the same data.
save('rand','rand');
run('HC');
clearvars -except SSE1 SSE2 rc1 rc2
load('rand');
display('First Clustering has a higher correlation, lower correlation indicates that points that belong to the same cluster are not close to each other.');
display('Good clustering will have lower SSE compared to bad clustering')
%% DBSCAN
sampledata=[1, 3, 5, 6, 8, 11, 12, 13, 14, 15, 16, 22, 28, 32, 33, 34, 35, 36, 37, 42, 58];
eps=4; minpts=3;
DBSCAN(eps,minpts,sampledata);   %input the eps,minpts,data(row or column vectors,array or matrix);
SSEDB1=ans;
clear ans;
eps=6; minpts=3;
DBSCAN(eps,minpts,sampledata);
SSEDB2=ans;
clear ans;
toc;
